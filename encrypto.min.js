let RSA="RSA",DES="DES",bitLen,Encrypto=function(b,e){let f,g,a;if(bitLen=void 0===bitLen?256:e,b===RSA){let c=new SeededRandom,h=genBigI(bitLen,c).subtract(BigInteger.ONE),i=genBigI(bitLen,c).subtract(BigInteger.ONE);a=h.multiply(i);let d=genBigI(bitLen,new SeededRandom),j=d.modInverse(a);f={pe:d.toString(),on:a.toString()},g={d:j.toString()}}else throw new Error("the algorithm: "+b+"does not exist or not supported by Zot Encrypto. Please refer docs at: https://github.com/ssddcodes/encrypto/");function k(){return f}function l(a){let b=encodeURIComponent(a).replace(/%([a-f0-9]{2})/gi,(b,a)=>String.fromCharCode(parseInt(a,16)));return btoa(b)}function m(a){let b=atob(a).replace(/[\x80-\uffff]/g,a=>`%${a.charCodeAt(0).toString(16).padStart(2,"0")}`);return decodeURIComponent(b)}return{encrypt:function(b,a){return l(new BigInteger(new TextEncoder().encode(b)).multiply(new BigInteger(a.pe)).mod(new BigInteger(a.on)).toString())},decrypt:function(b){return new TextDecoder().decode(new Uint8Array(new BigInteger(m(b)).multiply(new BigInteger(g.d)).mod(a).toByteArray()))},getPublicKey:k,getSterilizedPublicKey:function(){return l(JSON.stringify(f))},deSterilizeZotPublicKey:function(a){return JSON.parse(m(a))}}};function genBigI(b,c){let d=b>>1,a,e=new BigInteger("3",16);for(;;)if(0===(a=new BigInteger(b-d,1,c)).subtract(BigInteger.ONE).gcd(e).compareTo(BigInteger.ONE)&&a.isProbablePrime(10))return a}let dbits,canary=0xdeadbeefcafe,j_lm=(16777215&canary)==15715070,BigInteger=function(a,b,c){null!=a&&("number"==typeof a?this.fromNumber(a,b,c):null==b&&"string"!=typeof a?this.fromString(a,256):this.fromString(a,b))};function nbi(){return new BigInteger(null)}function am1(e,f,b,c,a,g){for(;--g>=0;){let d=f*this[e++]+b[c]+a;a=Math.floor(d/67108864),b[c++]=67108863&d}return a}function am2(c,d,e,f,a,k){let g=32767&d,h=d>>15;for(;--k>=0;){let b=32767&this[c],i=this[c++]>>15,j=h*b+i*g;a=((b=g*b+((32767&j)<<15)+e[f]+(1073741823&a))>>>30)+(j>>>15)+h*i+(a>>>30),e[f++]=1073741823&b}return a}function am3(c,d,e,f,b,k){let g=16383&d,h=d>>14;for(;--k>=0;){let a=16383&this[c],i=this[c++]>>14,j=h*a+i*g;b=((a=g*a+((16383&j)<<14)+e[f]+b)>>28)+(j>>14)+h*i,e[f++]=268435455&a}return b}BigInteger.prototype.am=am3,dbits=28,BigInteger.prototype.DB=dbits,BigInteger.prototype.DM=(1<<dbits)-1,BigInteger.prototype.DV=1<<dbits;let BI_FP=52;BigInteger.prototype.FV=Math.pow(2,BI_FP),BigInteger.prototype.F1=BI_FP-dbits,BigInteger.prototype.F2=2*dbits-BI_FP;let BI_RM="0123456789abcdefghijklmnopqrstuvwxyz",BI_RC=[],rr,vv;for(vv=0,rr=48;vv<=9;++vv)BI_RC[rr++]=vv;for(vv=10,rr=97;vv<36;++vv)BI_RC[rr++]=vv;for(vv=10,rr=65;vv<36;++vv)BI_RC[rr++]=vv;function int2char(a){return BI_RM.charAt(a)}function intAt(b,c){let a=BI_RC[b.charCodeAt(c)];return null==a?-1:a}function bnpCopyTo(b){for(let a=this.t-1;a>=0;--a)b[a]=this[a];b.t=this.t,b.s=this.s}function bnpFromInt(a){this.t=1,this.s=a<0?-1:0,a>0?this[0]=a:a< -1?this[0]=a+this.DV:this.t=0}function nbv(b){let a=nbi();return a.fromInt(b),a}function bnpFromString(d,c){let b;if(16===c)b=4;else if(8===c)b=3;else if(256===c)b=8;else if(2===c)b=1;else if(32===c)b=5;else if(4===c)b=2;else{this.fromRadix(d,c);return}this.t=0,this.s=0;let f=d.length,g=!1,a=0;for(;--f>=0;){let e=8===b?255&d[f]:intAt(d,f);if(e<0){"-"===d.charAt(f)&&(g=!0);continue}g=!1,0===a?this[this.t++]=e:a+b>this.DB?(this[this.t-1]|=(e&(1<<this.DB-a)-1)<<a,this[this.t++]=e>>this.DB-a):this[this.t-1]|=e<<a,(a+=b)>=this.DB&&(a-=this.DB)}8===b&&(128&d[0])!=0&&(this.s=-1,a>0&&(this[this.t-1]|=(1<<this.DB-a)-1<<a)),this.clamp(),g&&BigInteger.ZERO.subTo(this,this)}function bnpClamp(){let a=this.s&this.DM;for(;this.t>0&&this[this.t-1]===a;)--this.t}function bnToString(d){if(this.s<0)return"-"+this.negate().toString(d);let a;if(16===d)a=4;else if(8===d)a=3;else if(2===d)a=1;else if(32===d)a=5;else{if(4!==d)return this.toRadix(d);a=2}let h=(1<<a)-1,e,f=!1,g="",c=this.t,b=this.DB-c*this.DB%a;if(c-- >0)for(b<this.DB&&(e=this[c]>>b)>0&&(f=!0,g=int2char(e));c>=0;)b<a?(e=(this[c]&(1<<b)-1)<<a-b,e|=this[--c]>>(b+=this.DB-a)):(e=this[c]>>(b-=a)&h,b<=0&&(b+=this.DB,--c)),e>0&&(f=!0),f&&(g+=int2char(e));return f?g:"0"}function bnNegate(){let a=nbi();return BigInteger.ZERO.subTo(this,a),a}function bnAbs(){return this.s<0?this.negate():this}function bnCompareTo(c){let a=this.s-c.s;if(0!==a)return a;let b=this.t;if(0!=(a=b-c.t))return this.s<0?-a:a;for(;--b>=0;)if(0!=(a=this[b]-c[b]))return a;return 0}function nbits(a){let c=1,b;return 0!=(b=a>>>16)&&(a=b,c+=16),0!=(b=a>>8)&&(a=b,c+=8),0!=(b=a>>4)&&(a=b,c+=4),0!=(b=a>>2)&&(a=b,c+=2),0!=(b=a>>1)&&(a=b,c+=1),c}function bnBitLength(){return this.t<=0?0:this.DB*(this.t-1)+nbits(this[this.t-1]^this.s&this.DM)}function bnpDLShiftTo(c,b){let a;for(a=this.t-1;a>=0;--a)b[a+c]=this[a];for(a=c-1;a>=0;--a)b[a]=0;b.t=this.t+c,b.s=this.s}function bnpDRShiftTo(b,c){for(let a=b;a<this.t;++a)c[a-b]=this[a];c.t=Math.max(this.t-b,0),c.s=this.s}function bnpLShiftTo(f,b){let d=f%this.DB,g=this.DB-d,h=(1<<g)-1,c=Math.floor(f/this.DB),e=this.s<<d&this.DM,a;for(a=this.t-1;a>=0;--a)b[a+c+1]=this[a]>>g|e,e=(this[a]&h)<<d;for(a=c-1;a>=0;--a)b[a]=0;b[c]=e,b.t=this.t+c+1,b.s=this.s,b.clamp()}function bnpRShiftTo(e,a){a.s=this.s;let b=Math.floor(e/this.DB);if(b>=this.t){a.t=0;return}let d=e%this.DB,f=this.DB-d,g=(1<<d)-1;a[0]=this[b]>>d;for(let c=b+1;c<this.t;++c)a[c-b-1]|=(this[c]&g)<<f,a[c-b]=this[c]>>d;d>0&&(a[this.t-b-1]|=(this.s&g)<<f),a.t=this.t-b,a.clamp()}function bnpSubTo(d,c){let b=0,a=0,e=Math.min(d.t,this.t);for(;b<e;)a+=this[b]-d[b],c[b++]=a&this.DM,a>>=this.DB;if(d.t<this.t){for(a-=d.s;b<this.t;)a+=this[b],c[b++]=a&this.DM,a>>=this.DB;a+=this.s}else{for(a+=this.s;b<d.t;)a-=d[b],c[b++]=a&this.DM,a>>=this.DB;a-=d.s}c.s=a<0?-1:0,a< -1?c[b++]=this.DV+a:a>0&&(c[b++]=a),c.t=b,c.clamp()}function bnpMultiplyTo(e,b){let c=this.abs(),d=e.abs(),a=c.t;for(b.t=a+d.t;--a>=0;)b[a]=0;for(a=0;a<d.t;++a)b[a+c.t]=c.am(0,d[a],b,a,0,c.t);b.s=0,b.clamp(),this.s!==e.s&&BigInteger.ZERO.subTo(b,b)}function bnpSquareTo(c){let b=this.abs(),a=c.t=2*b.t;for(;--a>=0;)c[a]=0;for(a=0;a<b.t-1;++a){let d=b.am(a,b[a],c,2*a,0,1);(c[a+b.t]+=b.am(a+1,2*b[a],c,2*a+1,d,b.t-a-1))>=b.DV&&(c[a+b.t]-=b.DV,c[a+b.t+1]=1)}c.t>0&&(c[c.t-1]+=b.am(a,b[a],c,2*a,0,1)),c.s=0,c.clamp()}function bnpDivRemTo(m,d,a){let f=m.abs();if(f.t<=0)return;let j=this.abs();if(j.t<f.t){null!=d&&d.fromInt(0),null!=a&&this.copyTo(a);return}null==a&&(a=nbi());let b=nbi(),n=this.s,p=m.s,h=this.DB-nbits(f[f.t-1]);h>0?(f.lShiftTo(h,b),j.lShiftTo(h,a)):(f.copyTo(b),j.copyTo(a));let c=b.t,k=b[c-1];if(0===k)return;let o=k*(1<<this.F1)+(c>1?b[c-2]>>this.F2:0),q=this.FV/o,r=(1<<this.F1)/o,s=1<<this.F2,g=a.t,i=g-c,e=null==d?nbi():d;for(b.dlShiftTo(i,e),a.compareTo(e)>=0&&(a[a.t++]=1,a.subTo(e,a)),BigInteger.ONE.dlShiftTo(c,e),e.subTo(b,b);b.t<c;)b[b.t++]=0;for(;--i>=0;){let l=a[--g]===k?this.DM:Math.floor(a[g]*q+(a[g-1]+s)*r);if((a[g]+=b.am(0,l,a,i,0,c))<l)for(b.dlShiftTo(i,e),a.subTo(e,a);a[g]< --l;)a.subTo(e,a)}null!=d&&(a.drShiftTo(c,d),n!==p&&BigInteger.ZERO.subTo(d,d)),a.t=c,a.clamp(),h>0&&a.rShiftTo(h,a),n<0&&BigInteger.ZERO.subTo(a,a)}function bnMod(b){let a=nbi();return this.abs().divRemTo(b,null,a),this.s<0&&a.compareTo(BigInteger.ZERO)>0&&b.subTo(a,a),a}function Classic(a){this.m=a}function cConvert(a){return a.s<0||a.compareTo(this.m)>=0?a.mod(this.m):a}function cRevert(a){return a}function cReduce(a){a.divRemTo(this.m,null,a)}function cMulTo(b,c,a){b.multiplyTo(c,a),this.reduce(a)}function cSqrTo(b,a){b.squareTo(a),this.reduce(a)}function bnpInvDigit(){if(this.t<1)return 0;let b=this[0];if((1&b)==0)return 0;let a=3&b;return(a=(a=(a=(a=a*(2-(15&b)*a)&15)*(2-(255&b)*a)&255)*(2-((65535&b)*a&65535))&65535)*(2-b*a%this.DV)%this.DV)>0?this.DV-a:-a}function Montgomery(a){this.m=a,this.mp=a.invDigit(),this.mpl=32767&this.mp,this.mph=this.mp>>15,this.um=(1<<a.DB-15)-1,this.mt2=2*a.t}function montConvert(b){let a=nbi();return b.abs().dlShiftTo(this.m.t,a),a.divRemTo(this.m,null,a),b.s<0&&a.compareTo(BigInteger.ZERO)>0&&this.m.subTo(a,a),a}function montRevert(b){let a=nbi();return b.copyTo(a),this.reduce(a),a}function montReduce(a){for(;a.t<=this.mt2;)a[a.t++]=0;for(let c=0;c<this.m.t;++c){let b=32767&a[c],d=b*this.mpl+((b*this.mph+(a[c]>>15)*this.mpl&this.um)<<15)&a.DM;for(b=c+this.m.t,a[b]+=this.m.am(0,d,a,c,0,this.m.t);a[b]>=a.DV;)a[b]-=a.DV,a[++b]++}a.clamp(),a.drShiftTo(this.m.t,a),a.compareTo(this.m)>=0&&a.subTo(this.m,a)}function montSqrTo(b,a){b.squareTo(a),this.reduce(a)}function montMulTo(b,c,a){b.multiplyTo(c,a),this.reduce(a)}function bnpIsEven(){return(this.t>0?1&this[0]:this.s)===0}function bnpExp(b,c){if(b>4294967295||b<1)return BigInteger.ONE;let a=nbi(),d=nbi(),e=c.convert(this),f=nbits(b)-1;for(e.copyTo(a);--f>=0;)if(c.sqrTo(a,d),(b&1<<f)>0)c.mulTo(d,e,a);else{let g=a;a=d,d=g}return c.revert(a)}function bnModPowInt(b,a){let c;return c=b<256||a.isEven()?new Classic(a):new Montgomery(a),this.exp(b,c)}function bnClone(){let a=nbi();return this.copyTo(a),a}function bnIntValue(){if(this.s<0){if(1===this.t)return this[0]-this.DV;if(0===this.t)return -1}else if(1===this.t)return this[0];else if(0===this.t)return 0;return(this[1]&(1<<32-this.DB)-1)<<this.DB|this[0]}function bnByteValue(){return 0===this.t?this.s:this[0]<<24>>24}function bnShortValue(){return 0===this.t?this.s:this[0]<<16>>16}function bnpChunkSize(a){return Math.floor(Math.LN2*this.DB/Math.log(a))}function bnSigNum(){return this.s<0?-1:this.t<=0||1===this.t&&this[0]<=0?0:1}function bnpToRadix(a){if(null==a&&(a=10),0===this.signum()||a<2||a>36)return"0";let g=this.chunkSize(a),e=Math.pow(a,g),f=nbv(e),b=nbi(),c=nbi(),d="";for(this.divRemTo(f,b,c);b.signum()>0;)d=(e+c.intValue()).toString(a).substr(1)+d,b.divRemTo(f,b,c);return c.intValue().toString(a)+d}function bnpFromRadix(e,a){this.fromInt(0),null==a&&(a=10);let f=this.chunkSize(a),i=Math.pow(a,f),g=!1,c=0,b=0;for(let d=0;d<e.length;++d){let h=intAt(e,d);if(h<0){"-"===e.charAt(d)&&0===this.signum()&&(g=!0);continue}b=a*b+h,++c>=f&&(this.dMultiply(i),this.dAddOffset(b,0),c=0,b=0)}c>0&&(this.dMultiply(Math.pow(a,c)),this.dAddOffset(b,0)),g&&BigInteger.ZERO.subTo(this,this)}function bnpFromNumber(a,c,e){if("number"==typeof c){if(a<2)this.fromInt(1);else for(this.fromNumber(a,e),this.testBit(a-1)||this.bitwiseTo(BigInteger.ONE.shiftLeft(a-1),op_or,this),this.isEven()&&this.dAddOffset(1,0);!this.isProbablePrime(c);)this.dAddOffset(2,0),this.bitLength()>a&&this.subTo(BigInteger.ONE.shiftLeft(a-1),this)}else{let b=[],d=7&a;b.length=(a>>3)+1,c.nextBytes(b),d>0?b[0]&=(1<<d)-1:b[0]=0,this.fromString(b,256)}}function bnToByteArray(){let c=this.t,e=[];e[0]=this.s;let a=this.DB-c*this.DB%8,b,d=0;if(c-- >0)for(a<this.DB&&(b=this[c]>>a)!=(this.s&this.DM)>>a&&(e[d++]=b|this.s<<this.DB-a);c>=0;)a<8?(b=(this[c]&(1<<a)-1)<<8-a,b|=this[--c]>>(a+=this.DB-8)):(b=this[c]>>(a-=8)&255,a<=0&&(a+=this.DB,--c)),(128&b)!=0&&(b|=-256),0===d&&(128&this.s)!=(128&b)&& ++d,(d>0||b!==this.s)&&(e[d++]=b);return e}function bnEquals(a){return 0===this.compareTo(a)}function bnMin(a){return 0>this.compareTo(a)?this:a}function bnMax(a){return this.compareTo(a)>0?this:a}function bnpBitwiseTo(b,d,c){let a,e,f=Math.min(b.t,this.t);for(a=0;a<f;++a)c[a]=d(this[a],b[a]);if(b.t<this.t){for(e=b.s&this.DM,a=f;a<this.t;++a)c[a]=d(this[a],e);c.t=this.t}else{for(e=this.s&this.DM,a=f;a<b.t;++a)c[a]=d(e,b[a]);c.t=b.t}c.s=d(this.s,b.s),c.clamp()}function op_and(a,b){return a&b}function bnAnd(b){let a=nbi();return this.bitwiseTo(b,op_and,a),a}function op_or(a,b){return a|b}function bnOr(b){let a=nbi();return this.bitwiseTo(b,op_or,a),a}function op_xor(a,b){return a^b}function bnXor(b){let a=nbi();return this.bitwiseTo(b,op_xor,a),a}function op_andnot(a,b){return a& ~b}function bnAndNot(b){let a=nbi();return this.bitwiseTo(b,op_andnot,a),a}function bnNot(){let a=nbi();for(let b=0;b<this.t;++b)a[b]=this.DM& ~this[b];return a.t=this.t,a.s=~this.s,a}function bnShiftLeft(a){let b=nbi();return a<0?this.rShiftTo(-a,b):this.lShiftTo(a,b),b}function bnShiftRight(a){let b=nbi();return a<0?this.lShiftTo(-a,b):this.rShiftTo(a,b),b}function lbit(a){if(0===a)return -1;let b=0;return(65535&a)==0&&(a>>=16,b+=16),(255&a)==0&&(a>>=8,b+=8),(15&a)==0&&(a>>=4,b+=4),(3&a)==0&&(a>>=2,b+=2),(1&a)==0&& ++b,b}function bnGetLowestSetBit(){for(let a=0;a<this.t;++a)if(0!==this[a])return a*this.DB+lbit(this[a]);return this.s<0?this.t*this.DB:-1}function cbit(a){let b=0;for(;0!==a;)a&=a-1,++b;return b}function bnBitCount(){let b=0,c=this.s&this.DM;for(let a=0;a<this.t;++a)b+=cbit(this[a]^c);return b}function bnTestBit(a){let b=Math.floor(a/this.DB);return b>=this.t?0!==this.s:(this[b]&1<<a%this.DB)!=0}function bnpChangeBit(b,c){let a=BigInteger.ONE.shiftLeft(b);return this.bitwiseTo(a,c,a),a}function bnSetBit(a){return this.changeBit(a,op_or)}function bnClearBit(a){return this.changeBit(a,op_andnot)}function bnFlipBit(a){return this.changeBit(a,op_xor)}function bnpAddTo(d,c){let b=0,a=0,e=Math.min(d.t,this.t);for(;b<e;)a+=this[b]+d[b],c[b++]=a&this.DM,a>>=this.DB;if(d.t<this.t){for(a+=d.s;b<this.t;)a+=this[b],c[b++]=a&this.DM,a>>=this.DB;a+=this.s}else{for(a+=this.s;b<d.t;)a+=d[b],c[b++]=a&this.DM,a>>=this.DB;a+=d.s}c.s=a<0?-1:0,a>0?c[b++]=a:a< -1&&(c[b++]=this.DV+a),c.t=b,c.clamp()}function bnAdd(b){let a=nbi();return this.addTo(b,a),a}function bnSubtract(b){let a=nbi();return this.subTo(b,a),a}function bnMultiply(b){let a=nbi();return this.multiplyTo(b,a),a}function bnSquare(){let a=nbi();return this.squareTo(a),a}function bnDivide(b){let a=nbi();return this.divRemTo(b,a,null),a}function bnRemainder(b){let a=nbi();return this.divRemTo(b,null,a),a}function bnDivideAndRemainder(c){let a=nbi(),b=nbi();return this.divRemTo(c,a,b),[a,b]}function bnpDMultiply(a){this[this.t]=this.am(0,a-1,this,0,0,this.t),++this.t,this.clamp()}function bnpDAddOffset(b,a){if(0!==b){for(;this.t<=a;)this[this.t++]=0;for(this[a]+=b;this[a]>=this.DV;)this[a]-=this.DV,++a>=this.t&&(this[this.t++]=0),++this[a]}}function NullExp(){}function nNop(a){return a}function nMulTo(a,b,c){a.multiplyTo(b,c)}function nSqrTo(a,b){a.squareTo(b)}function bnPow(a){return this.exp(a,new NullExp)}function bnpMultiplyLowerTo(c,e,b){let a=Math.min(this.t+c.t,e);for(b.s=0,b.t=a;a>0;)b[--a]=0;let d;for(d=b.t-this.t;a<d;++a)b[a+this.t]=this.am(0,c[a],b,a,0,this.t);for(d=Math.min(c.t,e);a<d;++a)this.am(0,c[a],b,a,0,e-a);b.clamp()}function bnpMultiplyUpperTo(d,c,b){--c;let a=b.t=this.t+d.t-c;for(b.s=0;--a>=0;)b[a]=0;for(a=Math.max(c-this.t,0);a<d.t;++a)b[this.t+a-c]=this.am(c-a,d[a],b,0,0,this.t+a-c);b.clamp(),b.drShiftTo(1,b)}function Barrett(a){this.r2=nbi(),this.q3=nbi(),BigInteger.ONE.dlShiftTo(2*a.t,this.r2),this.mu=this.r2.divide(a),this.m=a}function barrettConvert(a){if(a.s<0||a.t>2*this.m.t)return a.mod(this.m);{if(0>a.compareTo(this.m))return a;let b=nbi();return a.copyTo(b),this.reduce(b),b}}function barrettRevert(a){return a}function barrettReduce(a){for(a.drShiftTo(this.m.t-1,this.r2),a.t>this.m.t+1&&(a.t=this.m.t+1,a.clamp()),this.mu.multiplyUpperTo(this.r2,this.m.t+1,this.q3),this.m.multiplyLowerTo(this.q3,this.m.t+1,this.r2);0>a.compareTo(this.r2);)a.dAddOffset(1,this.m.t+1);for(a.subTo(this.r2,a);a.compareTo(this.m)>=0;)a.subTo(this.m,a)}function barrettSqrTo(b,a){b.squareTo(a),this.reduce(a)}function barrettMulTo(b,c,a){b.multiplyTo(c,a),this.reduce(a)}function bnModPow(g,k){let a=g.bitLength(),j,b=nbv(1),d;if(a<=0)return b;j=a<18?1:a<48?3:a<144?4:a<768?5:6,d=a<8?new Classic(k):k.isEven()?new Barrett(k):new Montgomery(k);let h=[],c=3,l=j-1,n=(1<<j)-1;if(h[1]=d.convert(this),j>1){let o=nbi();for(d.sqrTo(h[1],o);c<=n;)h[c]=nbi(),d.mulTo(o,h[c-2],h[c]),c+=2}let e=g.t-1,i,p=!0,f=nbi(),m;for(a=nbits(g[e])-1;e>=0;){for(a>=l?i=g[e]>>a-l&n:(i=(g[e]&(1<<a+1)-1)<<l-a,e>0&&(i|=g[e-1]>>this.DB+a-l)),c=j;(1&i)==0;)i>>=1,--c;if((a-=c)<0&&(a+=this.DB,--e),p)h[i].copyTo(b),p=!1;else{for(;c>1;)d.sqrTo(b,f),d.sqrTo(f,b),c-=2;c>0?d.sqrTo(b,f):(m=b,b=f,f=m),d.mulTo(f,h[i],b)}for(;e>=0&&(g[e]&1<<a)==0;)d.sqrTo(b,f),m=b,b=f,f=m,--a<0&&(a=this.DB-1,--e)}return d.revert(b)}function bnGCD(e){let b=this.s<0?this.negate():this.clone(),a=e.s<0?e.negate():e.clone();if(0>b.compareTo(a)){let f=b;b=a,a=f}let d=b.getLowestSetBit(),c=a.getLowestSetBit();if(c<0)return b;for(d<c&&(c=d),c>0&&(b.rShiftTo(c,b),a.rShiftTo(c,a));b.signum()>0;)(d=b.getLowestSetBit())>0&&b.rShiftTo(d,b),(d=a.getLowestSetBit())>0&&a.rShiftTo(d,a),b.compareTo(a)>=0?(b.subTo(a,b),b.rShiftTo(1,b)):(a.subTo(b,a),a.rShiftTo(1,a));return c>0&&a.lShiftTo(c,a),a}function bnpModInt(a){if(a<=0)return 0;let d=this.DV%a,b=this.s<0?a-1:0;if(this.t>0){if(0===d)b=this[0]%a;else for(let c=this.t-1;c>=0;--c)b=(d*b+this[c])%a}return b}function bnModInverse(b){let h=b.isEven();if(this.isEven()&&h||0===b.signum())return BigInteger.ZERO;let d=b.clone(),e=this.clone(),f=nbv(1),c=nbv(0),g=nbv(0),a=nbv(1);for(;0!==d.signum();){for(;d.isEven();)d.rShiftTo(1,d),h?(f.isEven()&&c.isEven()||(f.addTo(this,f),c.subTo(b,c)),f.rShiftTo(1,f)):c.isEven()||c.subTo(b,c),c.rShiftTo(1,c);for(;e.isEven();)e.rShiftTo(1,e),h?(g.isEven()&&a.isEven()||(g.addTo(this,g),a.subTo(b,a)),g.rShiftTo(1,g)):a.isEven()||a.subTo(b,a),a.rShiftTo(1,a);d.compareTo(e)>=0?(d.subTo(e,d),h&&f.subTo(g,f),c.subTo(a,c)):(e.subTo(d,e),h&&g.subTo(f,g),a.subTo(c,a))}return 0!==e.compareTo(BigInteger.ONE)?BigInteger.ZERO:a.compareTo(b)>=0?a.subtract(b):0>a.signum()&&(a.addTo(b,a),0>a.signum())?a.add(b):a}Classic.prototype.convert=cConvert,Classic.prototype.revert=cRevert,Classic.prototype.reduce=cReduce,Classic.prototype.mulTo=cMulTo,Classic.prototype.sqrTo=cSqrTo,Montgomery.prototype.convert=montConvert,Montgomery.prototype.revert=montRevert,Montgomery.prototype.reduce=montReduce,Montgomery.prototype.mulTo=montMulTo,Montgomery.prototype.sqrTo=montSqrTo,BigInteger.prototype.copyTo=bnpCopyTo,BigInteger.prototype.fromInt=bnpFromInt,BigInteger.prototype.fromString=bnpFromString,BigInteger.prototype.clamp=bnpClamp,BigInteger.prototype.dlShiftTo=bnpDLShiftTo,BigInteger.prototype.drShiftTo=bnpDRShiftTo,BigInteger.prototype.lShiftTo=bnpLShiftTo,BigInteger.prototype.rShiftTo=bnpRShiftTo,BigInteger.prototype.subTo=bnpSubTo,BigInteger.prototype.multiplyTo=bnpMultiplyTo,BigInteger.prototype.squareTo=bnpSquareTo,BigInteger.prototype.divRemTo=bnpDivRemTo,BigInteger.prototype.invDigit=bnpInvDigit,BigInteger.prototype.isEven=bnpIsEven,BigInteger.prototype.exp=bnpExp,BigInteger.prototype.toString=bnToString,BigInteger.prototype.negate=bnNegate,BigInteger.prototype.abs=bnAbs,BigInteger.prototype.compareTo=bnCompareTo,BigInteger.prototype.bitLength=bnBitLength,BigInteger.prototype.mod=bnMod,BigInteger.prototype.modPowInt=bnModPowInt,BigInteger.ZERO=nbv(0),BigInteger.ONE=nbv(1),NullExp.prototype.convert=nNop,NullExp.prototype.revert=nNop,NullExp.prototype.mulTo=nMulTo,NullExp.prototype.sqrTo=nSqrTo,Barrett.prototype.convert=barrettConvert,Barrett.prototype.revert=barrettRevert,Barrett.prototype.reduce=barrettReduce,Barrett.prototype.mulTo=barrettMulTo,Barrett.prototype.sqrTo=barrettSqrTo;let lowprimes=[2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509,521,523,541,547,557,563,569,571,577,587,593,599,601,607,613,617,619,631,641,643,647,653,659,661,673,677,683,691,701,709,719,727,733,739,743,751,757,761,769,773,787,797,809,811,821,823,827,829,839,853,857,859,863,877,881,883,887,907,911,919,929,937,941,947,953,967,971,977,983,991,997],lplim=67108864/lowprimes[lowprimes.length-1];function bnIsProbablePrime(e){let a,b=this.abs();if(1===b.t&&b[0]<=lowprimes[lowprimes.length-1]){for(a=0;a<lowprimes.length;++a)if(b[0]===lowprimes[a])return!0;return!1}if(b.isEven())return!1;for(a=1;a<lowprimes.length;){let c=lowprimes[a],d=a+1;for(;d<lowprimes.length&&c<lplim;)c*=lowprimes[d++];for(c=b.modInt(c);a<d;)if(c%lowprimes[a++]==0)return!1}return b.millerRabin(e)}function bnpMillerRabin(c){let b=this.subtract(BigInteger.ONE),d=b.getLowestSetBit();if(d<=0)return!1;let g=b.shiftRight(d);(c=c+1>>1)>lowprimes.length&&(c=lowprimes.length);let e=nbi();for(let f=0;f<c;++f){e.fromInt(lowprimes[Math.floor(Math.random()*lowprimes.length)]);let a=e.modPow(g,this);if(0!==a.compareTo(BigInteger.ONE)&&0!==a.compareTo(b)){let h=1;for(;(h++)<d&&0!==a.compareTo(b);)if(0===(a=a.modPowInt(2,this)).compareTo(BigInteger.ONE))return!1;if(0!==a.compareTo(b))return!1}}return!0}BigInteger.prototype.chunkSize=bnpChunkSize,BigInteger.prototype.toRadix=bnpToRadix,BigInteger.prototype.fromRadix=bnpFromRadix,BigInteger.prototype.fromNumber=bnpFromNumber,BigInteger.prototype.bitwiseTo=bnpBitwiseTo,BigInteger.prototype.changeBit=bnpChangeBit,BigInteger.prototype.addTo=bnpAddTo,BigInteger.prototype.dMultiply=bnpDMultiply,BigInteger.prototype.dAddOffset=bnpDAddOffset,BigInteger.prototype.multiplyLowerTo=bnpMultiplyLowerTo,BigInteger.prototype.multiplyUpperTo=bnpMultiplyUpperTo,BigInteger.prototype.modInt=bnpModInt,BigInteger.prototype.millerRabin=bnpMillerRabin,BigInteger.prototype.clone=bnClone,BigInteger.prototype.intValue=bnIntValue,BigInteger.prototype.byteValue=bnByteValue,BigInteger.prototype.shortValue=bnShortValue,BigInteger.prototype.signum=bnSigNum,BigInteger.prototype.toByteArray=bnToByteArray,BigInteger.prototype.equals=bnEquals,BigInteger.prototype.min=bnMin,BigInteger.prototype.max=bnMax,BigInteger.prototype.and=bnAnd,BigInteger.prototype.or=bnOr,BigInteger.prototype.xor=bnXor,BigInteger.prototype.andNot=bnAndNot,BigInteger.prototype.not=bnNot,BigInteger.prototype.shiftLeft=bnShiftLeft,BigInteger.prototype.shiftRight=bnShiftRight,BigInteger.prototype.getLowestSetBit=bnGetLowestSetBit,BigInteger.prototype.bitCount=bnBitCount,BigInteger.prototype.testBit=bnTestBit,BigInteger.prototype.setBit=bnSetBit,BigInteger.prototype.clearBit=bnClearBit,BigInteger.prototype.flipBit=bnFlipBit,BigInteger.prototype.add=bnAdd,BigInteger.prototype.subtract=bnSubtract,BigInteger.prototype.multiply=bnMultiply,BigInteger.prototype.divide=bnDivide,BigInteger.prototype.remainder=bnRemainder,BigInteger.prototype.divideAndRemainder=bnDivideAndRemainder,BigInteger.prototype.modPow=bnModPow,BigInteger.prototype.modInverse=bnModInverse,BigInteger.prototype.pow=bnPow,BigInteger.prototype.gcd=bnGCD,BigInteger.prototype.isProbablePrime=bnIsProbablePrime,BigInteger.prototype.square=bnSquare,function(c,a,d,e,b,f,g){function i(e){let g,h,a=this,f=e.length,b=0,c=a.i=a.j=a.m=0;for(a.S=[],a.c=[],f||(e=[f++]);b<d;)a.S[b]=b++;for(b=0;b<d;b++)c=k(c+(g=a.S[b])+e[b%f]),h=a.S[c],a.S[b]=h,a.S[c]=g;a.g=function(i){let b=a.S,f=k(a.i+1),c=b[f],e=k(a.j+c),g=b[e];b[f]=g,b[e]=c;let h=b[k(c+g)];for(;--i;)c=b[f=k(f+1)],e=k(e+c),g=b[e],b[f]=g,b[e]=c,h=h*d+b[k(c+g)];return a.i=f,a.j=e,h},a.g(d)}function j(a,e,b,c,d){if(b=[],d=typeof a,e&&"object"===d){for(c in a)if(5>c.indexOf("S"))try{b.push(j(a[c],e-1))}catch(f){}}return b.length?b:a+("string"!==d?"\0":"")}function h(b,c,d,a){for(b+="",d=0,a=0;a<b.length;a++)c[k(a)]=k((d^=19*c[k(a)])+b.charCodeAt(a));for(a in b="",c)b+=String.fromCharCode(c[a]);return b}function k(a){return a&d-1}a.seedrandom=function(k,m){let l=[],n;return k=h(j(m?[k,c]:arguments.length?k:[new Date().getTime(),c],3),l),h((n=new i(l)).S,c),a.random=function(){let a=n.g(e),h=g,c=0;for(;a<b;)a=(a+c)*d,h*=d,c=n.g(1);for(;a>=f;)a/=2,h/=2,c>>>=1;return(a+c)/h},k},g=a.pow(d,e),b=a.pow(2,b),f=2*b,h(a.random(),c)}([],Math,256,6,52);let SeededRandom=function(){};function SRnextBytes(b){let a;for(a=0;a<b.length;a++)b[a]=Math.floor(256*Math.random())}function Arcfour(){this.i=0,this.j=0,this.S=[]}function prng_newstate(){return new Arcfour}SeededRandom.prototype.nextBytes=SRnextBytes;let rng_psize=256,rng_state,rng_pool,rng_pptr;function rng_seed_int(a){rng_pool[rng_pptr++]^=255&a,rng_pool[rng_pptr++]^=a>>8&255,rng_pool[rng_pptr++]^=a>>16&255,rng_pool[rng_pptr++]^=a>>24&255,rng_pptr>=rng_psize&&(rng_pptr-=rng_psize)}function rng_seed_time(){rng_seed_int(new Date().getTime())}if(null==rng_pool){rng_pool=[],rng_pptr=0;let a;for(;rng_pptr<rng_psize;)a=Math.floor(65536*Math.random()),rng_pool[rng_pptr++]=a>>>8,rng_pool[rng_pptr++]=255&a;rng_pptr=0,rng_seed_time()}function rng_get_byte(){if(null==rng_state){for(rng_seed_time(),(rng_state=prng_newstate()).init(rng_pool),rng_pptr=0;rng_pptr<rng_pool.length;++rng_pptr)rng_pool[rng_pptr]=0;rng_pptr=0}return rng_state.next()}function rng_get_bytes(b){let a;for(a=0;a<b.length;++a)b[a]=rng_get_byte()}function SecureRandom(){}SecureRandom.prototype.nextBytes=rng_get_bytes